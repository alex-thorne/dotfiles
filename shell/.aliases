# generic ui stuff
alias la='ls -A'
alias ll='ls -l'
alias vi='vim'
alias cp='cp -v'
alias home="cd ~ && echo '$PWD'"
alias psa="ps aux"
alias psg="ps aux | grep "
alias df='df -h'
alias du='du -h -d 2'l
alias path='echo -e ${PATH//:/\\n}'
alias ga='git add'
alias gaa='git add --all'
alias gc='git checkout'
alias gcm='git checkout master'
alias glog='git log --decorate --oneline --graph'
alias gloga='git log --all --decorate --oneline --graph'
alias gst='git status'
alias gca='git commit --amend'
alias k='kubectl'

#vim
alias rvim='sudoedit' #root vim: use user's vimrc when editing as root
alias :q='exit'

#dotfile stuff
alias vimrc='vim ~/.vimrc'
alias bashrc='vim ~/.bashrc'
alias zshrc='vim ~/.zshrc'
alias aliases='vim ~/.bash_aliases'
alias stowall='~/.dotfiles/stowall.sh'
alias dotfiles='cd ~/.dotfiles'

# Minikube
alias mk='minikube'
alias mkstart='minikube start && eval $(minikube docker-env)'
alias mkstop='minikube stop && eval $(docker-machine env -u)'
alias mkenv='eval $(minikube docker-env)'
alias dockerenv='eval $(docker-machine env -u)'

#Custom Functions
mkdircd() {
  mkdir -p -- "$1" && cd -P -- "$1"
  }

installpackage () {
  sudo apt update
  sudo apt -y upgrade
  sudo apt install $1
  installdate=$(date +"%Y-%m-%d")
  echo -e "$installdate Installed package $1" >> /path/to/changelog.txt
  sudo apt autoremove
  }

removepackage () {
  sudo apt remove $1
  removedate=$(date +"%Y-%m-%d")
  echo -e "$removedate Removed package $1" >> /path/to/changelog.txt
  sudo apt autoremove
  }

extract () {
  if [ -f $1 ] ; then
    case $1 in
        *.tar.bz2)   tar xvjf $1    ;;
        *.tar.gz)    tar xvzf $1    ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       rar x $1       ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xvf $1     ;;
        *.tbz2)      tar xvjf $1    ;;
        *.tgz)       tar xvzf $1    ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)           echo "unsupport filetype: '$1'..." ;;
    esac
  else
    echo "'$1' is not a valid file!"
  fi
}

# launch app and immediately disown, allowing terminal to be closed
function daemonize() { nohup $@ >/dev/null 2>&1 & }